IF EXISTS (SELECT TOP 1 1 FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[DBO].[AP7003_QC]') AND  OBJECTPROPERTY(ID, N'IsProcedure') = 1)			
DROP PROCEDURE [DBO].[AP7003_QC]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
---- Created by Trần Kim Thư, Date 09/11/2018
---- Purpose:  Kiểm tra xuất kho âm khi xóa / sửa các phiếu nhập kho (hàng có quy cách)
--				Phiếu nhập kho (truyền VoucherID của phiếu nhập)
--				Phiếu chuyển kho (truyền VoucherID của phiếu chuyển)
--				Phiếu nhập kho thành phẩm (truyền VoucherID của kết quản sx thành phẩm)
--				Phiếu nhập kho hàng mua (truyền VoucherID của phiếu mua hàng)
--				Phiếu nhập kho hàng bán trả lại (truyền VoucherID của phiếu bán hàng trả lại)
----			Kiểm tra tồn kho / xuất kho âm cho mặt hàng có quy cách trong hóa đơn bán hàng trước khi sinh phiếu xuất kho tự động
---- Modified by Kim Thư on 14/01/2019: Bổ sung show lỗi đối với hóa đơn bán hàng có sinh phiếu xuất
---- Modified by Kim Thư on 25/02/2019: Bổ sung xuất IsNegativeStock ra kết quả check
---- Modified by Kim Thư on 28/03/2019: Sửa lỗi  COLLATE SQL_Latin1_General_CP1_CI_AS
---- Modified by Kim Thư on 27/05/2019: Tính lại số lượng nhập bao gồm phiếu số dư đầu. Cộng số lượng nếu có nhiều dòng cùng mặt hàng
---- Modified by Nhựt Trường on 02/10/2020: (Sửa danh mục dùng chung)Bổ sung điều kiện DivisionID IN cho bảng AT1302.


-- EXAMPLE:
-- EXEC AP7003_QC @DivisionID, @UserID, @VoucherID, @ScreenID, @NewWarehouseID, @XML
-- EXEC AP7003_QC @DivisionID='KHV', @UserID='ASOFTADMIN', @VoucherID='ARbda595d1-f506-4fdc-b6df-4eb71460e4b9', @ScreenID='WF0008', @NewWarehouseID='KDL', @XML=NULL
--EXEC AP7003_QC @DivisionID='KHV', @UserID='ASOFTADMIN', @VoucherID='AR71d6b905-d163-4a6f-b965-9369af139335', @NewWarehouseID='KDL', @ScreenID='WF0008', 
--@XML =
--'<Data><NewInventoryID>MH2</NewInventoryID><NewQuantity>3</NewQuantity>
--			<S01ID></S01ID><S02ID></S02ID><S03ID></S03ID><S04ID></S04ID><S05ID></S05ID>
--			<S06ID></S06ID><S07ID></S07ID><S08ID></S08ID><S09ID></S09ID><S10ID></S10ID>
--			<S11ID></S11ID><S12ID></S12ID><S13ID></S13ID><S14ID></S14ID><S15ID></S15ID>
--			<S16ID></S16ID><S17ID></S17ID><S18ID></S18ID><S19ID></S19ID><S20ID></S20ID>
--</Data>'

CREATE PROCEDURE [dbo].[AP7003_QC] 	
	@DivisionID AS VARCHAR(50),
	@UserID AS VARCHAR(50),
	@VoucherID AS VARCHAR(50),
	@ScreenID AS VARCHAR(50) = '',
	@NewWarehouseID AS VARCHAR(50),
	@XML XML
	
AS

	Declare @IsNegativeStock as tinyint, @KindVoucherID TINYINT, @WarehouseID VARCHAR(50)
	Select  @IsNegativeStock = IsNegativeStock From WT0000 WITH (NOLOCK)  Where DefDivisionID =@DivisionID  --- Cho phep xuat kho am hay khong
	Set @IsNegativeStock = isnull(@IsNegativeStock,0)
	Select @WarehouseID=WarehouseID FROM AT2006  WITH (NOLOCK) WHERE VoucherID=@VoucherID

	IF @ScreenID ='AF0080' --Xóa phiếu mua hàng, tìm lại VoucherID của phiếu nhập kho của phiếu mua hàng này
	BEGIN
		SELECT @VoucherID=ISNULL(VoucherID,'') FROM AT2006 WITH (NOLOCK)  WHERE TableID='AT9000' AND KindVoucherID=5 and VoucherID=@VoucherID
	END
	ELSE IF @ScreenID ='AF0097' --Xóa phiếu hàng bán trả lại, tìm lại VoucherID của phiếu nhập kho của phiếu trả hàng này
	BEGIN
		SELECT @VoucherID=ISNULL(VoucherID,'') FROM AT2006 WITH (NOLOCK)  WHERE KindVoucherID=7 and VoucherID=@VoucherID
	END
	ELSE IF @ScreenID ='MF0017' --Xóa phiếu kết quả sản xuất thành phầm, tìm lại VoucherID của phiếu nhập kho của phiếu kết quả này
	BEGIN
		SELECT @VoucherID=ISNULL(VoucherID,'') FROM AT2006 WITH (NOLOCK)  WHERE TableID='MT0810' AND KindVoucherID=1 and VoucherID=@VoucherID
	END


	-- XÁC ĐỊNH LOẠI PHIẾU TRUYỀN VÀO
	SELECT @KindVoucherID= KindVoucherID FROM AT2006 WITH (NOLOCK)  WHERE VoucherID=@VoucherID

	IF @KindVoucherID in (1,3,5,7)
	BEGIN
		CREATE TABLE #CHECK 
		(WarehouseID VARCHAR(50) COLLATE DATABASE_DEFAULT, InventoryID VARCHAR(100) COLLATE DATABASE_DEFAULT, ActualQuantity DECIMAL(28,8), ImQuantity DECIMAL(28,8), ExQuantity DECIMAL(28,8), EndQuantity DECIMAL(28,8),
		 S01ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S02ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S03ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S04ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S05ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S06ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S07ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S08ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S09ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S10ID VARCHAR(50) COLLATE DATABASE_DEFAULT,	
		 S11ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S12ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S13ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S14ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S15ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S16ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S17ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S18ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S19ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S20ID VARCHAR(50) COLLATE DATABASE_DEFAULT,	
		 Status TINYINT, Message VARCHAR(50), Params VARCHAR(50) )

		IF @XML IS NULL -- Trường hợp xóa phiếu
		BEGIN
		
			INSERT INTO #CHECK (WarehouseID, InventoryID, ActualQuantity, ImQuantity, ExQuantity, EndQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
			S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID)

			SELECT T1.WarehouseID, T2.InventoryID, SUM(T2.ActualQuantity) AS ActualQuantity, ISNULL(X.ImQuantity,0) AS ImQuantity, ISNULL(Y.ExQuantity,0) AS ExQuantity, (ISNULL(X.ImQuantity,0)-ISNULL(Y.ExQuantity,0)) AS EndQuantity,
			ISNULL(W89.S01ID,'') AS S01ID, ISNULL(W89.S02ID,'') AS S02ID, ISNULL(W89.S03ID,'') AS S03ID, ISNULL(W89.S04ID,'') AS S04ID, ISNULL(W89.S05ID,'') AS S05ID,
			ISNULL(W89.S06ID,'') AS S06ID, ISNULL(W89.S07ID,'') AS S07ID, ISNULL(W89.S08ID,'') AS S08ID, ISNULL(W89.S09ID,'') AS S09ID, ISNULL(W89.S10ID,'') AS S10ID,
			ISNULL(W89.S11ID,'') AS S11ID, ISNULL(W89.S12ID,'') AS S12ID, ISNULL(W89.S13ID,'') AS S13ID, ISNULL(W89.S14ID,'') AS S14ID, ISNULL(W89.S15ID,'') AS S15ID,
			ISNULL(W89.S16ID,'') AS S16ID, ISNULL(W89.S17ID,'') AS S17ID, ISNULL(W89.S18ID,'') AS S18ID, ISNULL(W89.S19ID,'') AS S19ID, ISNULL(W89.S20ID,'') AS S20ID
			FROM AT2006 T1 WITH (NOLOCK)  INNER JOIN AT2007 T2 WITH (NOLOCK)  ON T1.DivisionID = T2.DivisionID AND T1.VoucherID=T2.VoucherID 
			INNER JOIN WT8899 W89 WITH (NOLOCK) ON W89.DivisionID = T2.DivisionID AND W89.VoucherID = T2.VoucherID AND W89.TransactionID = T2.TransactionID

			LEFT JOIN ( SELECT DivisionID, WarehouseID, InventoryID, SUM(ImQuantity) AS ImQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
								S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID
						FROM (
								SELECT A1.DivisionID, A1.WarehouseID, A2.InventoryID, SUM(A2.ActualQuantity) AS ImQuantity,
										ISNULL(A89.S01ID,'') AS S01ID, ISNULL(A89.S02ID,'') AS S02ID, ISNULL(A89.S03ID,'') AS S03ID, ISNULL(A89.S04ID,'') AS S04ID, ISNULL(A89.S05ID,'') AS S05ID,
										ISNULL(A89.S06ID,'') AS S06ID, ISNULL(A89.S07ID,'') AS S07ID, ISNULL(A89.S08ID,'') AS S08ID, ISNULL(A89.S09ID,'') AS S09ID, ISNULL(A89.S10ID,'') AS S10ID,
										ISNULL(A89.S11ID,'') AS S11ID, ISNULL(A89.S12ID,'') AS S12ID, ISNULL(A89.S13ID,'') AS S13ID, ISNULL(A89.S14ID,'') AS S14ID, ISNULL(A89.S15ID,'') AS S15ID,
										ISNULL(A89.S16ID,'') AS S16ID, ISNULL(A89.S17ID,'') AS S17ID, ISNULL(A89.S18ID,'') AS S18ID, ISNULL(A89.S19ID,'') AS S19ID, ISNULL(A89.S20ID,'') AS S20ID
								FROM AT2006 A1 WITH (NOLOCK)  
								INNER JOIN AT2007 A2 WITH (NOLOCK)  ON A1.DivisionID = A2.DivisionID AND A1.VoucherID=A2.VoucherID 
								INNER JOIN WT8899 A89 WITH (NOLOCK) ON A89.DivisionID = A2.DivisionID AND A89.VoucherID = A2.VoucherID AND A89.TransactionID = A2.TransactionID
								WHERE A1.DivisionID = @DivisionID AND A1.VoucherID <> @VoucherID
										AND ((A1.KindVoucherID in (1,5,7,9) AND A1.WarehouseID = @WarehouseID) OR (A1.KindVoucherID =3 AND A1.WarehouseID = @WarehouseID))
								GROUP BY  A1.DivisionID, A1.WarehouseID, A2.InventoryID, 
										ISNULL(A89.S01ID,''), ISNULL(A89.S02ID,''), ISNULL(A89.S03ID,''), ISNULL(A89.S04ID,''), ISNULL(A89.S05ID,''),
										ISNULL(A89.S06ID,''), ISNULL(A89.S07ID,''), ISNULL(A89.S08ID,''), ISNULL(A89.S09ID,''), ISNULL(A89.S10ID,''),
										ISNULL(A89.S11ID,''), ISNULL(A89.S12ID,''), ISNULL(A89.S13ID,''), ISNULL(A89.S14ID,''), ISNULL(A89.S15ID,''),
										ISNULL(A89.S16ID,''), ISNULL(A89.S17ID,''), ISNULL(A89.S18ID,''), ISNULL(A89.S19ID,''), ISNULL(A89.S20ID,'')
								UNION ALL
								SELECT A1.DivisionID, A1.WarehouseID, A2.InventoryID, SUM(A2.ActualQuantity) AS ImQuantity,
										ISNULL(A89.S01ID,'') AS S01ID, ISNULL(A89.S02ID,'') AS S02ID, ISNULL(A89.S03ID,'') AS S03ID, ISNULL(A89.S04ID,'') AS S04ID, ISNULL(A89.S05ID,'') AS S05ID,
										ISNULL(A89.S06ID,'') AS S06ID, ISNULL(A89.S07ID,'') AS S07ID, ISNULL(A89.S08ID,'') AS S08ID, ISNULL(A89.S09ID,'') AS S09ID, ISNULL(A89.S10ID,'') AS S10ID,
										ISNULL(A89.S11ID,'') AS S11ID, ISNULL(A89.S12ID,'') AS S12ID, ISNULL(A89.S13ID,'') AS S13ID, ISNULL(A89.S14ID,'') AS S14ID, ISNULL(A89.S15ID,'') AS S15ID,
										ISNULL(A89.S16ID,'') AS S16ID, ISNULL(A89.S17ID,'') AS S17ID, ISNULL(A89.S18ID,'') AS S18ID, ISNULL(A89.S19ID,'') AS S19ID, ISNULL(A89.S20ID,'') AS S20ID
								FROM AT2016 A1 WITH(NOLOCK) 
								INNER JOIN AT2017 A2 WITH(NOLOCK) ON A1.DivisionID = A2.DivisionID AND A1.VoucherID=A2.VoucherID 
								INNER JOIN WT8899 A89 WITH (NOLOCK) ON A89.DivisionID = A2.DivisionID AND A89.VoucherID = A2.VoucherID AND A89.TransactionID = A2.TransactionID
								WHERE A1.DivisionID = @DivisionID AND A1.VoucherID <> @VoucherID AND A1.WarehouseID = @WarehouseID
								GROUP BY  A1.DivisionID, A1.WarehouseID, A2.InventoryID,
										ISNULL(A89.S01ID,''), ISNULL(A89.S02ID,''), ISNULL(A89.S03ID,''), ISNULL(A89.S04ID,''), ISNULL(A89.S05ID,''),
										ISNULL(A89.S06ID,''), ISNULL(A89.S07ID,''), ISNULL(A89.S08ID,''), ISNULL(A89.S09ID,''), ISNULL(A89.S10ID,''),
										ISNULL(A89.S11ID,''), ISNULL(A89.S12ID,''), ISNULL(A89.S13ID,''), ISNULL(A89.S14ID,''), ISNULL(A89.S15ID,''),
										ISNULL(A89.S16ID,''), ISNULL(A89.S17ID,''), ISNULL(A89.S18ID,''), ISNULL(A89.S19ID,''), ISNULL(A89.S20ID,'') 
							) TEMP
						GROUP BY DivisionID, WarehouseID, InventoryID, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
								S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID
					)X ON T1.DivisionID = X.DivisionID AND T1.WarehouseID = X.WarehouseID AND T2.InventoryID = X.InventoryID
						AND ISNULL(W89.S01ID,'') = ISNULL(X.S01ID,'') AND ISNULL(W89.S02ID,'') = ISNULL(X.S02ID,'') AND ISNULL(W89.S03ID,'') = ISNULL(X.S03ID,'') AND ISNULL(W89.S04ID,'') = ISNULL(X.S04ID,'') AND ISNULL(W89.S05ID,'') = ISNULL(X.S05ID,'') 
						AND ISNULL(W89.S06ID,'') = ISNULL(X.S06ID,'') AND ISNULL(W89.S07ID,'') = ISNULL(X.S07ID,'') AND ISNULL(W89.S08ID,'') = ISNULL(X.S08ID,'') AND ISNULL(W89.S09ID,'') = ISNULL(X.S09ID,'') AND ISNULL(W89.S10ID,'') = ISNULL(X.S10ID,'')
						AND ISNULL(W89.S11ID,'') = ISNULL(X.S11ID,'') AND ISNULL(W89.S12ID,'') = ISNULL(X.S12ID,'') AND ISNULL(W89.S13ID,'') = ISNULL(X.S13ID,'') AND ISNULL(W89.S14ID,'') = ISNULL(X.S14ID,'') AND ISNULL(W89.S15ID,'') = ISNULL(X.S15ID,'')
						AND ISNULL(W89.S16ID,'') = ISNULL(X.S16ID,'') AND ISNULL(W89.S17ID,'') = ISNULL(X.S17ID,'') AND ISNULL(W89.S18ID,'') = ISNULL(X.S18ID,'') AND ISNULL(W89.S19ID,'') = ISNULL(X.S19ID,'') AND ISNULL(W89.S20ID,'') = ISNULL(X.S20ID,'')
			
			LEFT JOIN (SELECT B1.DivisionID, CASE WHEN B1.KindVoucherID =3 THEN B1.WarehouseID2 ELSE B1.WarehouseID END AS WarehouseID, B2.InventoryID, SUM(B2.ActualQuantity) as ExQuantity,
								ISNULL(B89.S01ID,'') AS S01ID, ISNULL(B89.S02ID,'') AS S02ID, ISNULL(B89.S03ID,'') AS S03ID, ISNULL(B89.S04ID,'') AS S04ID, ISNULL(B89.S05ID,'') AS S05ID,
								ISNULL(B89.S06ID,'') AS S06ID, ISNULL(B89.S07ID,'') AS S07ID, ISNULL(B89.S08ID,'') AS S08ID, ISNULL(B89.S09ID,'') AS S09ID, ISNULL(B89.S10ID,'') AS S10ID,
								ISNULL(B89.S11ID,'') AS S11ID, ISNULL(B89.S12ID,'') AS S12ID, ISNULL(B89.S13ID,'') AS S13ID, ISNULL(B89.S14ID,'') AS S14ID, ISNULL(B89.S15ID,'') AS S15ID,
								ISNULL(B89.S16ID,'') AS S16ID, ISNULL(B89.S17ID,'') AS S17ID, ISNULL(B89.S18ID,'') AS S18ID, ISNULL(B89.S19ID,'') AS S19ID, ISNULL(B89.S20ID,'') AS S20ID
						FROM AT2006 B1 WITH (NOLOCK)  
						INNER JOIN AT2007 B2 WITH (NOLOCK) ON B1.DivisionID = B2.DivisionID AND B1.VoucherID=B2.VoucherID 
						INNER JOIN WT8899 B89 WITH (NOLOCK) ON B89.DivisionID = B2.DivisionID AND B89.VoucherID = B2.VoucherID AND B89.TransactionID = B2.TransactionID
						WHERE B1.DivisionID = @DivisionID AND ((B1.KindVoucherID in (2,4,6,8) AND B1.WarehouseID = @WarehouseID) OR (B1.KindVoucherID =3 AND B1.WarehouseID2 = @WarehouseID))
						GROUP BY B1.DivisionID, CASE WHEN B1.KindVoucherID =3 THEN B1.WarehouseID2 ELSE B1.WarehouseID END, B2.InventoryID,
								ISNULL(B89.S01ID,''), ISNULL(B89.S02ID,''), ISNULL(B89.S03ID,''), ISNULL(B89.S04ID,''), ISNULL(B89.S05ID,''),
								ISNULL(B89.S06ID,''), ISNULL(B89.S07ID,''), ISNULL(B89.S08ID,''), ISNULL(B89.S09ID,''), ISNULL(B89.S10ID,''),
								ISNULL(B89.S11ID,''), ISNULL(B89.S12ID,''), ISNULL(B89.S13ID,''), ISNULL(B89.S14ID,''), ISNULL(B89.S15ID,''),
								ISNULL(B89.S16ID,''), ISNULL(B89.S17ID,''), ISNULL(B89.S18ID,''), ISNULL(B89.S19ID,''), ISNULL(B89.S20ID,'')
					)Y ON T1.DivisionID = Y.DivisionID AND T1.WarehouseID = Y.WarehouseID AND T2.InventoryID = Y.InventoryID
						AND ISNULL(W89.S01ID,'') = ISNULL(Y.S01ID,'') AND ISNULL(W89.S02ID,'') = ISNULL(Y.S02ID,'') AND ISNULL(W89.S03ID,'') = ISNULL(Y.S03ID,'') AND ISNULL(W89.S04ID,'') = ISNULL(Y.S04ID,'') AND ISNULL(W89.S05ID,'') = ISNULL(Y.S05ID,'') 
						AND ISNULL(W89.S06ID,'') = ISNULL(Y.S06ID,'') AND ISNULL(W89.S07ID,'') = ISNULL(Y.S07ID,'') AND ISNULL(W89.S08ID,'') = ISNULL(Y.S08ID,'') AND ISNULL(W89.S09ID,'') = ISNULL(Y.S09ID,'') AND ISNULL(W89.S10ID,'') = ISNULL(Y.S10ID,'')
						AND ISNULL(W89.S11ID,'') = ISNULL(Y.S11ID,'') AND ISNULL(W89.S12ID,'') = ISNULL(Y.S12ID,'') AND ISNULL(W89.S13ID,'') = ISNULL(Y.S13ID,'') AND ISNULL(W89.S14ID,'') = ISNULL(Y.S14ID,'') AND ISNULL(W89.S15ID,'') = ISNULL(Y.S15ID,'')
						AND ISNULL(W89.S16ID,'') = ISNULL(Y.S16ID,'') AND ISNULL(W89.S17ID,'') = ISNULL(Y.S17ID,'') AND ISNULL(W89.S18ID,'') = ISNULL(Y.S18ID,'') AND ISNULL(W89.S19ID,'') = ISNULL(Y.S19ID,'') AND ISNULL(W89.S20ID,'') = ISNULL(Y.S20ID,'')
			

			WHERE T1.VoucherID=@VoucherID
			GROUP BY T1.WarehouseID, T2.InventoryID, X.ImQuantity, Y.ExQuantity, 
			ISNULL(W89.S01ID,''), ISNULL(W89.S02ID,''), ISNULL(W89.S03ID,''), ISNULL(W89.S04ID,''), ISNULL(W89.S05ID,''),
			ISNULL(W89.S06ID,''), ISNULL(W89.S07ID,''), ISNULL(W89.S08ID,''), ISNULL(W89.S09ID,''), ISNULL(W89.S10ID,''),
			ISNULL(W89.S11ID,''), ISNULL(W89.S12ID,''), ISNULL(W89.S13ID,''), ISNULL(W89.S14ID,''), ISNULL(W89.S15ID,''),
			ISNULL(W89.S16ID,''), ISNULL(W89.S17ID,''), ISNULL(W89.S18ID,''), ISNULL(W89.S19ID,''), ISNULL(W89.S20ID,'')


			UPDATE #CHECK
			SET Status=1, Message='WFML000256', Params=InventoryID
			WHERE EndQuantity < 0 AND @IsNegativeStock = 0

			UPDATE #CHECK
			SET Status=1, Message='WFML000257', Params=InventoryID
			WHERE EndQuantity < 0 AND @IsNegativeStock = 1

			UPDATE #CHECK
			SET Status=0, Message='', Params=''
			WHERE EndQuantity >= 0

			SELECT Status, Message, Params, @IsNegativeStock AS IsNegativeStock FROM #CHECK
		END
		ELSE --Trường hợp Edit phiếu
		BEGIN
			SELECT X.Data.query('NewInventoryID').value('.', 'VARCHAR(50)') AS NewInventoryID,
			X.Data.query('NewQuantity').value('.', 'DECIMAL(28,2)') AS NewQuantity,
			X.Data.query('S01ID').value('.', 'VARCHAR(50)') AS S01ID,
			X.Data.query('S02ID').value('.', 'VARCHAR(50)') AS S02ID,
			X.Data.query('S03ID').value('.', 'VARCHAR(50)') AS S03ID,
			X.Data.query('S04ID').value('.', 'VARCHAR(50)') AS S04ID,
			X.Data.query('S05ID').value('.', 'VARCHAR(50)') AS S05ID,
			X.Data.query('S06ID').value('.', 'VARCHAR(50)') AS S06ID,
			X.Data.query('S07ID').value('.', 'VARCHAR(50)') AS S07ID,
			X.Data.query('S08ID').value('.', 'VARCHAR(50)') AS S08ID,
			X.Data.query('S09ID').value('.', 'VARCHAR(50)') AS S09ID,
			X.Data.query('S10ID').value('.', 'VARCHAR(50)') AS S10ID,
			X.Data.query('S11ID').value('.', 'VARCHAR(50)') AS S11ID,
			X.Data.query('S12ID').value('.', 'VARCHAR(50)') AS S12ID,
			X.Data.query('S13ID').value('.', 'VARCHAR(50)') AS S13ID,
			X.Data.query('S14ID').value('.', 'VARCHAR(50)') AS S14ID,
			X.Data.query('S15ID').value('.', 'VARCHAR(50)') AS S15ID,
			X.Data.query('S16ID').value('.', 'VARCHAR(50)') AS S16ID,
			X.Data.query('S17ID').value('.', 'VARCHAR(50)') AS S17ID,
			X.Data.query('S18ID').value('.', 'VARCHAR(50)') AS S18ID,
			X.Data.query('S19ID').value('.', 'VARCHAR(50)') AS S19ID,
			X.Data.query('S20ID').value('.', 'VARCHAR(50)') AS S20ID
			INTO #TEMP2
			FROM @XML.nodes('//Data') AS X (Data)
	
			SELECT NewInventoryID, SUM(NewQuantity) AS NewQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
					S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID 
			INTO #TEMP
			FROM #TEMP2
			GROUP BY NewInventoryID, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
					S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID

			CREATE TABLE #GET_DELETE_INFO
			(OldWarehouseID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewWarehouseID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldInventoryID VARCHAR(100) COLLATE DATABASE_DEFAULT, NewInventoryID VARCHAR(100) COLLATE DATABASE_DEFAULT, OldQuantity DECIMAL(28,8), NewQuantity DECIMAL(28,8),
			NewS01ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS02ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS03ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS04ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS05ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS06ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS07ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS08ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS09ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS10ID VARCHAR(50) COLLATE DATABASE_DEFAULT,	
			NewS11ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS12ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS13ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS14ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS15ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS16ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS17ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS18ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS19ID VARCHAR(50) COLLATE DATABASE_DEFAULT, NewS20ID VARCHAR(50) COLLATE DATABASE_DEFAULT,
			OldS01ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS02ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS03ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS04ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS05ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS06ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS07ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS08ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS09ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS10ID VARCHAR(50) COLLATE DATABASE_DEFAULT,	
			OldS11ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS12ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS13ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS14ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS15ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS16ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS17ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS18ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS19ID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldS20ID VARCHAR(50) COLLATE DATABASE_DEFAULT)

			INSERT INTO #GET_DELETE_INFO
			SELECT @WarehouseID AS OldWarehouseID, @NewWarehouseID AS NewWarehouseID, T2.InventoryID AS OldInventoryID, T3.NewInventoryID AS NewInventoryID, 
					--T2.ActualQuantity AS OldActualQuantity, T3.NewQuantity AS NewQuantity,
					SUM(T2.ActualQuantity) AS OldActualQuantity, T3.NewQuantity AS NewQuantity,
					ISNULL(T3.S01ID,'') AS NewS01ID, ISNULL(T3.S02ID,'') AS NewS02ID, ISNULL(T3.S03ID,'') AS NewS03ID, ISNULL(T3.S04ID,'') AS NewS04ID, ISNULL(T3.S05ID,'') AS NewS05ID,
					ISNULL(T3.S06ID,'') AS NewS06ID, ISNULL(T3.S07ID,'') AS NewS07ID, ISNULL(T3.S08ID,'') AS NewS08ID, ISNULL(T3.S09ID,'') AS NewS09ID, ISNULL(T3.S10ID,'') AS NewS10ID,
					ISNULL(T3.S11ID,'') AS NewS11ID, ISNULL(T3.S12ID,'') AS NewS12ID, ISNULL(T3.S13ID,'') AS NewS13ID, ISNULL(T3.S14ID,'') AS NewS14ID, ISNULL(T3.S15ID,'') AS NewS15ID,
					ISNULL(T3.S16ID,'') AS NewS16ID, ISNULL(T3.S17ID,'') AS NewS17ID, ISNULL(T3.S18ID,'') AS NewS18ID, ISNULL(T3.S19ID,'') AS NewS19ID, ISNULL(T3.S20ID,'') AS NewS20ID,
					ISNULL(W89.S01ID,'') AS OldS01ID, ISNULL(W89.S02ID,'') AS OldS02ID, ISNULL(W89.S03ID,'') AS OldS03ID, ISNULL(W89.S04ID,'') AS OldS04ID, ISNULL(W89.S05ID,'') AS OldS05ID,
					ISNULL(W89.S06ID,'') AS OldS06ID, ISNULL(W89.S07ID,'') AS OldS07ID, ISNULL(W89.S08ID,'') AS OldS08ID, ISNULL(W89.S09ID,'') AS OldS09ID, ISNULL(W89.S10ID,'') AS OldS10ID,
					ISNULL(W89.S11ID,'') AS OldS11ID, ISNULL(W89.S12ID,'') AS OldS12ID, ISNULL(W89.S13ID,'') AS OldS13ID, ISNULL(W89.S14ID,'') AS OldS14ID, ISNULL(W89.S15ID,'') AS OldS15ID,
					ISNULL(W89.S16ID,'') AS OldS16ID, ISNULL(W89.S17ID,'') AS OldS17ID, ISNULL(W89.S18ID,'') AS OldS18ID, ISNULL(W89.S19ID,'') AS OldS19ID, ISNULL(W89.S20ID,'') AS OldS20ID
			FROM AT2006 T1 INNER JOIN AT2007 T2 ON T1.DivisionID = T2.DivisionID AND T1.VoucherID=T2.VoucherID 
							FULL JOIN #TEMP T3 ON T2.InventoryID = T3.NewInventoryID
							INNER JOIN WT8899 W89 WITH (NOLOCK) ON W89.DivisionID = T2.DivisionID AND W89.VoucherID = T2.VoucherID AND W89.TransactionID = T2.TransactionID
			WHERE T1.DivisionID=@DivisionID AND T1.VoucherID=@VoucherID
			GROUP BY T2.InventoryID, T3.NewInventoryID, T3.NewQuantity, 
					ISNULL(T3.S01ID,''), ISNULL(T3.S02ID,''), ISNULL(T3.S03ID,''), ISNULL(T3.S04ID,''), ISNULL(T3.S05ID,''),
					ISNULL(T3.S06ID,''), ISNULL(T3.S07ID,''), ISNULL(T3.S08ID,''), ISNULL(T3.S09ID,''), ISNULL(T3.S10ID,''),
					ISNULL(T3.S11ID,''), ISNULL(T3.S12ID,''), ISNULL(T3.S13ID,''), ISNULL(T3.S14ID,''), ISNULL(T3.S15ID,''),
					ISNULL(T3.S16ID,''), ISNULL(T3.S17ID,''), ISNULL(T3.S18ID,''), ISNULL(T3.S19ID,''), ISNULL(T3.S20ID,''),
					ISNULL(W89.S01ID,''), ISNULL(W89.S02ID,''), ISNULL(W89.S03ID,''), ISNULL(W89.S04ID,''), ISNULL(W89.S05ID,''),
					ISNULL(W89.S06ID,''), ISNULL(W89.S07ID,''), ISNULL(W89.S08ID,''), ISNULL(W89.S09ID,''), ISNULL(W89.S10ID,''),
					ISNULL(W89.S11ID,''), ISNULL(W89.S12ID,''), ISNULL(W89.S13ID,''), ISNULL(W89.S14ID,''), ISNULL(W89.S15ID,''),
					ISNULL(W89.S16ID,''), ISNULL(W89.S17ID,''), ISNULL(W89.S18ID,''), ISNULL(W89.S19ID,''), ISNULL(W89.S20ID,'')

			IF NOT EXISTS (SELECT TOP 1 * FROM #GET_DELETE_INFO WHERE OldInventoryID = NewInventoryID 
								AND OldS01ID=NewS01ID AND OldS02ID=NewS02ID AND OldS03ID=NewS03ID AND OldS04ID=NewS04ID AND OldS05ID=NewS05ID
								AND OldS06ID=NewS06ID AND OldS07ID=NewS07ID AND OldS08ID=NewS08ID AND OldS09ID=NewS09ID AND OldS10ID=NewS10ID
								AND OldS11ID=NewS11ID AND OldS12ID=NewS12ID AND OldS13ID=NewS13ID AND OldS14ID=NewS14ID AND OldS15ID=NewS15ID
								AND OldS16ID=NewS16ID AND OldS17ID=NewS17ID AND OldS18ID=NewS18ID AND OldS19ID=NewS19ID AND OldS10ID=NewS20ID) -- Trường hợp edit thay đổi tất cả các dòng detail -> thông tin xóa là detail cũ của phiếu
			BEGIN
				INSERT INTO #CHECK (WarehouseID, InventoryID, ActualQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
									S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID)
				SELECT T1.WarehouseID, T2.InventoryID, SUM(T2.ActualQuantity) AS ActualQuantity,
						ISNULL(W89.S01ID,'') AS OldS01ID, ISNULL(W89.S02ID,'') AS OldS02ID, ISNULL(W89.S03ID,'') AS OldS03ID, ISNULL(W89.S04ID,'') AS OldS04ID, ISNULL(W89.S05ID,'') AS OldS05ID,
						ISNULL(W89.S06ID,'') AS OldS06ID, ISNULL(W89.S07ID,'') AS OldS07ID, ISNULL(W89.S08ID,'') AS OldS08ID, ISNULL(W89.S09ID,'') AS OldS09ID, ISNULL(W89.S10ID,'') AS OldS10ID,
						ISNULL(W89.S11ID,'') AS OldS11ID, ISNULL(W89.S12ID,'') AS OldS12ID, ISNULL(W89.S13ID,'') AS OldS13ID, ISNULL(W89.S14ID,'') AS OldS14ID, ISNULL(W89.S15ID,'') AS OldS15ID,
						ISNULL(W89.S16ID,'') AS OldS16ID, ISNULL(W89.S17ID,'') AS OldS17ID, ISNULL(W89.S18ID,'') AS OldS18ID, ISNULL(W89.S19ID,'') AS OldS19ID, ISNULL(W89.S20ID,'') AS OldS20ID
				FROM AT2006 T1 INNER JOIN AT2007 T2 ON T1.DivisionID = T2.DivisionID AND T1.VoucherID=T2.VoucherID
							INNER JOIN WT8899 W89 WITH (NOLOCK) ON W89.DivisionID = T2.DivisionID AND W89.VoucherID = T2.VoucherID AND W89.TransactionID = T2.TransactionID
				WHERE T1.DivisionID=@DivisionID AND T1.VoucherID=@VoucherID
				GROUP BY T1.WarehouseID, T2.InventoryID,
						ISNULL(W89.S01ID,''), ISNULL(W89.S02ID,''), ISNULL(W89.S03ID,''), ISNULL(W89.S04ID,''), ISNULL(W89.S05ID,''),
						ISNULL(W89.S06ID,''), ISNULL(W89.S07ID,''), ISNULL(W89.S08ID,''), ISNULL(W89.S09ID,''), ISNULL(W89.S10ID,''),
						ISNULL(W89.S11ID,''), ISNULL(W89.S12ID,''), ISNULL(W89.S13ID,''), ISNULL(W89.S14ID,''), ISNULL(W89.S15ID,''),
						ISNULL(W89.S16ID,''), ISNULL(W89.S17ID,''), ISNULL(W89.S18ID,''), ISNULL(W89.S19ID,''), ISNULL(W89.S20ID,'')
			END
			ELSE
			BEGIN
				-- Trường hợp thay đổi thông tin kho hoặc mặt hàng
				INSERT INTO #CHECK (WarehouseID, InventoryID, ActualQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
									S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID)
				SELECT @WarehouseID, OldInventoryID, OldQuantity, 
						OldS01ID, OldS02ID, OldS03ID, OldS04ID, OldS05ID, OldS06ID, OldS07ID, OldS08ID, OldS09ID, OldS10ID,
						OldS11ID, OldS12ID, OldS13ID, OldS14ID, OldS15ID, OldS16ID, OldS17ID, OldS18ID, OldS19ID, OldS20ID
				FROM #GET_DELETE_INFO
				WHERE @WarehouseID<>@NewWarehouseID OR OldInventoryID <> NewInventoryID 
								OR OldS01ID<>NewS01ID OR OldS02ID<>NewS02ID OR OldS03ID<>NewS03ID OR OldS04ID<>NewS04ID OR OldS05ID<>NewS05ID
								OR OldS06ID<>NewS06ID OR OldS07ID<>NewS07ID OR OldS08ID<>NewS08ID OR OldS09ID<>NewS09ID OR OldS10ID<>NewS10ID
								OR OldS11ID<>NewS11ID OR OldS12ID<>NewS12ID OR OldS13ID<>NewS13ID OR OldS14ID<>NewS14ID OR OldS15ID<>NewS15ID
								OR OldS16ID<>NewS16ID OR OldS17ID<>NewS17ID OR OldS18ID<>NewS18ID OR OldS19ID<>NewS19ID OR OldS10ID<>NewS20ID
		
				-- Trường hợp không thay đổi thông tin kho và mặt hàng nhưng có thay đổi giảm số lượng
				INSERT INTO #CHECK (WarehouseID, InventoryID, ActualQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
									S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID)
				SELECT @WarehouseID, OldInventoryID, OldQuantity-NewQuantity,
						OldS01ID, OldS02ID, OldS03ID, OldS04ID, OldS05ID, OldS06ID, OldS07ID, OldS08ID, OldS09ID, OldS10ID,
						OldS11ID, OldS12ID, OldS13ID, OldS14ID, OldS15ID, OldS16ID, OldS17ID, OldS18ID, OldS19ID, OldS20ID
				FROM #GET_DELETE_INFO
				WHERE @WarehouseID=@NewWarehouseID AND OldInventoryID=NewInventoryID AND NewQuantity<OldQuantity
						AND OldS01ID=NewS01ID AND OldS02ID=NewS02ID AND OldS03ID=NewS03ID AND OldS04ID=NewS04ID AND OldS05ID=NewS05ID
						AND OldS06ID=NewS06ID AND OldS07ID=NewS07ID AND OldS08ID=NewS08ID AND OldS09ID=NewS09ID AND OldS10ID=NewS10ID
						AND OldS11ID=NewS11ID AND OldS12ID=NewS12ID AND OldS13ID=NewS13ID AND OldS14ID=NewS14ID AND OldS15ID=NewS15ID
						AND OldS16ID=NewS16ID AND OldS17ID=NewS17ID AND OldS18ID=NewS18ID AND OldS19ID=NewS19ID AND OldS10ID=NewS20ID
			END

			IF EXISTS (SELECT TOP 1 * FROM #CHECK) -- Khi đã có thông tin cần xóa khỏi phiếu nhập / chuyển
			BEGIN
				UPDATE T1
				SET T1.ImQuantity=ISNULL(X.ImQuantity,0)-T1.ActualQuantity, T1.ExQuantity=ISNULL(Y.ExQuantity,0), T1.EndQuantity= ISNULL(X.ImQuantity,0)-T1.ActualQuantity-ISNULL(Y.ExQuantity,0)
				FROM #CHECK T1 LEFT JOIN ( SELECT DivisionID, WarehouseID, InventoryID, SUM(ImQuantity) AS ImQuantity, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
												S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID
											FROM (
													SELECT A1.DivisionID, A1.WarehouseID, A2.InventoryID, SUM(A2.ActualQuantity) AS ImQuantity,
														ISNULL(A89.S01ID,'') AS S01ID, ISNULL(A89.S02ID,'') AS S02ID, ISNULL(A89.S03ID,'') AS S03ID, ISNULL(A89.S04ID,'') AS S04ID, ISNULL(A89.S05ID,'') AS S05ID,
														ISNULL(A89.S06ID,'') AS S06ID, ISNULL(A89.S07ID,'') AS S07ID, ISNULL(A89.S08ID,'') AS S08ID, ISNULL(A89.S09ID,'') AS S09ID, ISNULL(A89.S10ID,'') AS S10ID,
														ISNULL(A89.S11ID,'') AS S11ID, ISNULL(A89.S12ID,'') AS S12ID, ISNULL(A89.S13ID,'') AS S13ID, ISNULL(A89.S14ID,'') AS S14ID, ISNULL(A89.S15ID,'') AS S15ID,
														ISNULL(A89.S16ID,'') AS S16ID, ISNULL(A89.S17ID,'') AS S17ID, ISNULL(A89.S18ID,'') AS S18ID, ISNULL(A89.S19ID,'') AS S19ID, ISNULL(A89.S20ID,'') AS S20ID
													FROM AT2006 A1 INNER JOIN AT2007 A2 ON A1.DivisionID = A2.DivisionID AND A1.VoucherID=A2.VoucherID 
																INNER JOIN WT8899 A89 WITH (NOLOCK) ON A89.DivisionID = A2.DivisionID AND A89.VoucherID = A2.VoucherID AND A89.TransactionID = A2.TransactionID
													WHERE A1.DivisionID = @DivisionID --AND A1.VoucherID <> @VoucherID
													AND ((A1.KindVoucherID in (1,5,7,9) AND A1.WarehouseID = @WarehouseID) OR (A1.KindVoucherID =3 AND A1.WarehouseID = @WarehouseID))
													GROUP BY  A1.DivisionID, A1.WarehouseID, A2.InventoryID,
														ISNULL(A89.S01ID,''), ISNULL(A89.S02ID,''), ISNULL(A89.S03ID,''), ISNULL(A89.S04ID,''), ISNULL(A89.S05ID,''),
														ISNULL(A89.S06ID,''), ISNULL(A89.S07ID,''), ISNULL(A89.S08ID,''), ISNULL(A89.S09ID,''), ISNULL(A89.S10ID,''),
														ISNULL(A89.S11ID,''), ISNULL(A89.S12ID,''), ISNULL(A89.S13ID,''), ISNULL(A89.S14ID,''), ISNULL(A89.S15ID,''),
														ISNULL(A89.S16ID,''), ISNULL(A89.S17ID,''), ISNULL(A89.S18ID,''), ISNULL(A89.S19ID,''), ISNULL(A89.S20ID,'') 
													UNION ALL
													SELECT A1.DivisionID, A1.WarehouseID, A2.InventoryID, SUM(A2.ActualQuantity) AS ImQuantity,
															ISNULL(A89.S01ID,'') AS S01ID, ISNULL(A89.S02ID,'') AS S02ID, ISNULL(A89.S03ID,'') AS S03ID, ISNULL(A89.S04ID,'') AS S04ID, ISNULL(A89.S05ID,'') AS S05ID,
															ISNULL(A89.S06ID,'') AS S06ID, ISNULL(A89.S07ID,'') AS S07ID, ISNULL(A89.S08ID,'') AS S08ID, ISNULL(A89.S09ID,'') AS S09ID, ISNULL(A89.S10ID,'') AS S10ID,
															ISNULL(A89.S11ID,'') AS S11ID, ISNULL(A89.S12ID,'') AS S12ID, ISNULL(A89.S13ID,'') AS S13ID, ISNULL(A89.S14ID,'') AS S14ID, ISNULL(A89.S15ID,'') AS S15ID,
															ISNULL(A89.S16ID,'') AS S16ID, ISNULL(A89.S17ID,'') AS S17ID, ISNULL(A89.S18ID,'') AS S18ID, ISNULL(A89.S19ID,'') AS S19ID, ISNULL(A89.S20ID,'') AS S20ID
													FROM AT2016 A1 WITH(NOLOCK) 
													INNER JOIN AT2017 A2 WITH(NOLOCK) ON A1.DivisionID = A2.DivisionID AND A1.VoucherID=A2.VoucherID 
													INNER JOIN WT8899 A89 WITH (NOLOCK) ON A89.DivisionID = A2.DivisionID AND A89.VoucherID = A2.VoucherID AND A89.TransactionID = A2.TransactionID
													WHERE A1.DivisionID = @DivisionID AND A1.VoucherID <> @VoucherID AND A1.WarehouseID = @WarehouseID
													GROUP BY  A1.DivisionID, A1.WarehouseID, A2.InventoryID,
															ISNULL(A89.S01ID,''), ISNULL(A89.S02ID,''), ISNULL(A89.S03ID,''), ISNULL(A89.S04ID,''), ISNULL(A89.S05ID,''),
															ISNULL(A89.S06ID,''), ISNULL(A89.S07ID,''), ISNULL(A89.S08ID,''), ISNULL(A89.S09ID,''), ISNULL(A89.S10ID,''),
															ISNULL(A89.S11ID,''), ISNULL(A89.S12ID,''), ISNULL(A89.S13ID,''), ISNULL(A89.S14ID,''), ISNULL(A89.S15ID,''),
															ISNULL(A89.S16ID,''), ISNULL(A89.S17ID,''), ISNULL(A89.S18ID,''), ISNULL(A89.S19ID,''), ISNULL(A89.S20ID,'') 
												) TEMP
											GROUP BY DivisionID, WarehouseID, InventoryID, S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
													S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID
										)X ON T1.WarehouseID = X.WarehouseID AND T1.InventoryID = X.InventoryID
											AND ISNULL(T1.S01ID,'') = ISNULL(X.S01ID,'') AND ISNULL(T1.S02ID,'') = ISNULL(X.S02ID,'') AND ISNULL(T1.S03ID,'') = ISNULL(X.S03ID,'') AND ISNULL(T1.S04ID,'') = ISNULL(X.S04ID,'') AND ISNULL(T1.S05ID,'') = ISNULL(X.S05ID,'') 
											AND ISNULL(T1.S06ID,'') = ISNULL(X.S06ID,'') AND ISNULL(T1.S07ID,'') = ISNULL(X.S07ID,'') AND ISNULL(T1.S08ID,'') = ISNULL(X.S08ID,'') AND ISNULL(T1.S09ID,'') = ISNULL(X.S09ID,'') AND ISNULL(T1.S10ID,'') = ISNULL(X.S10ID,'')
											AND ISNULL(T1.S11ID,'') = ISNULL(X.S11ID,'') AND ISNULL(T1.S12ID,'') = ISNULL(X.S12ID,'') AND ISNULL(T1.S13ID,'') = ISNULL(X.S13ID,'') AND ISNULL(T1.S14ID,'') = ISNULL(X.S14ID,'') AND ISNULL(T1.S15ID,'') = ISNULL(X.S15ID,'')
											AND ISNULL(T1.S16ID,'') = ISNULL(X.S16ID,'') AND ISNULL(T1.S17ID,'') = ISNULL(X.S17ID,'') AND ISNULL(T1.S18ID,'') = ISNULL(X.S18ID,'') AND ISNULL(T1.S19ID,'') = ISNULL(X.S19ID,'') AND ISNULL(T1.S20ID,'') = ISNULL(X.S20ID,'')

				LEFT JOIN (SELECT B1.DivisionID, CASE WHEN B1.KindVoucherID =3 THEN B1.WarehouseID2 ELSE B1.WarehouseID END AS WarehouseID, B2.InventoryID, SUM(B2.ActualQuantity) as ExQuantity,
								ISNULL(B89.S01ID,'') AS S01ID, ISNULL(B89.S02ID,'') AS S02ID, ISNULL(B89.S03ID,'') AS S03ID, ISNULL(B89.S04ID,'') AS S04ID, ISNULL(B89.S05ID,'') AS S05ID,
								ISNULL(B89.S06ID,'') AS S06ID, ISNULL(B89.S07ID,'') AS S07ID, ISNULL(B89.S08ID,'') AS S08ID, ISNULL(B89.S09ID,'') AS S09ID, ISNULL(B89.S10ID,'') AS S10ID,
								ISNULL(B89.S11ID,'') AS S11ID, ISNULL(B89.S12ID,'') AS S12ID, ISNULL(B89.S13ID,'') AS S13ID, ISNULL(B89.S14ID,'') AS S14ID, ISNULL(B89.S15ID,'') AS S15ID,
								ISNULL(B89.S16ID,'') AS S16ID, ISNULL(B89.S17ID,'') AS S17ID, ISNULL(B89.S18ID,'') AS S18ID, ISNULL(B89.S19ID,'') AS S19ID, ISNULL(B89.S20ID,'') AS S20ID
							FROM AT2006 B1 INNER JOIN AT2007 B2 ON B1.DivisionID = B2.DivisionID AND B1.VoucherID=B2.VoucherID 
										INNER JOIN WT8899 B89 WITH (NOLOCK) ON B89.DivisionID = B2.DivisionID AND B89.VoucherID = B2.VoucherID AND B89.TransactionID = B2.TransactionID
							WHERE B1.DivisionID = @DivisionID AND ((B1.KindVoucherID in (2,4,6,8) AND B1.WarehouseID = @WarehouseID) OR (B1.KindVoucherID =3 AND B1.WarehouseID2 = @WarehouseID))
							GROUP BY B1.DivisionID, CASE WHEN B1.KindVoucherID =3 THEN B1.WarehouseID2 ELSE B1.WarehouseID END, B2.InventoryID ,
								ISNULL(B89.S01ID,''), ISNULL(B89.S02ID,''), ISNULL(B89.S03ID,''), ISNULL(B89.S04ID,''), ISNULL(B89.S05ID,''),
								ISNULL(B89.S06ID,''), ISNULL(B89.S07ID,''), ISNULL(B89.S08ID,''), ISNULL(B89.S09ID,''), ISNULL(B89.S10ID,''),
								ISNULL(B89.S11ID,''), ISNULL(B89.S12ID,''), ISNULL(B89.S13ID,''), ISNULL(B89.S14ID,''), ISNULL(B89.S15ID,''),
								ISNULL(B89.S16ID,''), ISNULL(B89.S17ID,''), ISNULL(B89.S18ID,''), ISNULL(B89.S19ID,''), ISNULL(B89.S20ID,'')
						)Y ON T1.WarehouseID = Y.WarehouseID AND T1.InventoryID = Y.InventoryID
							AND ISNULL(T1.S01ID,'') = ISNULL(Y.S01ID,'') AND ISNULL(T1.S02ID,'') = ISNULL(Y.S02ID,'') AND ISNULL(T1.S03ID,'') = ISNULL(Y.S03ID,'') AND ISNULL(T1.S04ID,'') = ISNULL(Y.S04ID,'') AND ISNULL(T1.S05ID,'') = ISNULL(Y.S05ID,'') 
							AND ISNULL(T1.S06ID,'') = ISNULL(Y.S06ID,'') AND ISNULL(T1.S07ID,'') = ISNULL(Y.S07ID,'') AND ISNULL(T1.S08ID,'') = ISNULL(Y.S08ID,'') AND ISNULL(T1.S09ID,'') = ISNULL(Y.S09ID,'') AND ISNULL(T1.S10ID,'') = ISNULL(Y.S10ID,'')
							AND ISNULL(T1.S11ID,'') = ISNULL(Y.S11ID,'') AND ISNULL(T1.S12ID,'') = ISNULL(Y.S12ID,'') AND ISNULL(T1.S13ID,'') = ISNULL(Y.S13ID,'') AND ISNULL(T1.S14ID,'') = ISNULL(Y.S14ID,'') AND ISNULL(T1.S15ID,'') = ISNULL(Y.S15ID,'')
							AND ISNULL(T1.S16ID,'') = ISNULL(Y.S16ID,'') AND ISNULL(T1.S17ID,'') = ISNULL(Y.S17ID,'') AND ISNULL(T1.S18ID,'') = ISNULL(Y.S18ID,'') AND ISNULL(T1.S19ID,'') = ISNULL(Y.S19ID,'') AND ISNULL(T1.S20ID,'') = ISNULL(Y.S20ID,'')
			
				UPDATE #CHECK
				SET Status=1, Message='WFML000256', Params=InventoryID
				WHERE EndQuantity < 0 AND @IsNegativeStock = 0

				UPDATE #CHECK
				SET Status=1, Message='WFML000257', Params=InventoryID
				WHERE EndQuantity < 0 AND @IsNegativeStock = 1

				UPDATE #CHECK
				SET Status=0, Message='', Params=''
				WHERE EndQuantity >= 0

				SELECT Status, Message, Params, @IsNegativeStock AS IsNegativeStock FROM #CHECK
			END
			ELSE
				SELECT 0 AS Status, '' AS Message, '' AS Params, @IsNegativeStock AS IsNegativeStock
		END
	END
	ELSE -- Kiểm tra tồn kho / xuất kho âm đối với hóa đơn bán hàng tự sinh phiếu xuất kho, lúc này chưa có phiếu xuất hoặc edit phiếu xuất (tự sinh) KindVoucherID=4
	BEGIN
		Delete AT7777 Where UserID =@UserID AND DivisionID = @DivisionID
		Delete AT7778 Where UserID =@UserID AND DivisionID = @DivisionID

		CREATE TABLE #AP7003 (TranMonth INT, TranYear INT, WarehouseID VARCHAR(50) COLLATE DATABASE_DEFAULT, InventoryID VARCHAR(50) COLLATE DATABASE_DEFAULT, OldQuantity DECIMAL(28,2), NewQuantity DECIMAL(28,2), VoucherDate DATETIME, CreditAccountID VARCHAR(10) COLLATE DATABASE_DEFAULT, 
								EndQuantity_ToVoucherDate DECIMAL(28,8), EndQuantity_ToNow DECIMAL(28,2), ReOrderQuantity DECIMAL(28,2), 
								S01ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S02ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S03ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S04ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S05ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S06ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S07ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S08ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S09ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S10ID VARCHAR(50) COLLATE DATABASE_DEFAULT,	
								S11ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S12ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S13ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S14ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S15ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S16ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S17ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S18ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S19ID VARCHAR(50) COLLATE DATABASE_DEFAULT, S20ID VARCHAR(50) COLLATE DATABASE_DEFAULT,
								Status TINYINT, MessageID VARCHAR(50), Params VARCHAR(50))
		INSERT INTO #AP7003 (TranMonth, TranYear, WarehouseID, InventoryID, OldQuantity, NewQuantity, VoucherDate, CreditAccountID,
								S01ID, S02ID, S03ID, S04ID, S05ID, S06ID, S07ID, S08ID, S09ID, S10ID,
								S11ID, S12ID, S13ID, S14ID, S15ID, S16ID, S17ID, S18ID, S19ID, S20ID)
		SELECT A1.TranMonth, A1.TranYear, @NewWarehouseID, A1.InventoryID, ISNULL(A3.ActualQuantity,0), A1.Quantity, A1.VoucherDate, A2.AccountID as CreditAccountID,
			ISNULL(W89.S01ID,'') AS S01ID, ISNULL(W89.S02ID,'') AS S02ID, ISNULL(W89.S03ID,'') AS S03ID, ISNULL(W89.S04ID,'') AS S04ID, ISNULL(W89.S05ID,'') AS S05ID,
			ISNULL(W89.S06ID,'') AS S06ID, ISNULL(W89.S07ID,'') AS S07ID, ISNULL(W89.S08ID,'') AS S08ID, ISNULL(W89.S09ID,'') AS S09ID, ISNULL(W89.S10ID,'') AS S10ID,
			ISNULL(W89.S11ID,'') AS S11ID, ISNULL(W89.S12ID,'') AS S12ID, ISNULL(W89.S13ID,'') AS S13ID, ISNULL(W89.S14ID,'') AS S14ID, ISNULL(W89.S15ID,'') AS S15ID,
			ISNULL(W89.S16ID,'') AS S16ID, ISNULL(W89.S17ID,'') AS S17ID, ISNULL(W89.S18ID,'') AS S18ID, ISNULL(W89.S19ID,'') AS S19ID, ISNULL(W89.S20ID,'') AS S20ID
		FROM AT9000 A1 LEFT JOIN AT1302 A2 ON A2.DivisionID IN (A1.DivisionID,'@@@') AND A1.InventoryID = A2.InventoryID 
						INNER JOIN AT2007 A3 ON A1.VoucherID = A3.VoucherID AND A1.InventoryID = A3.InventoryID
						INNER JOIN WT8899 W89 WITH (NOLOCK) ON W89.DivisionID = A3.DivisionID AND W89.VoucherID = A3.VoucherID AND W89.TransactionID = A3.TransactionID
		WHERE A1.VoucherID= @VoucherID AND A1.TransactionTypeID='T04'

		UPDATE T1
		Set T1.EndQuantity_ToVoucherDate =Isnull(T1.OldQuantity,0) + Isnull((Select SUM(SignQuantity) From AV7000 Where DivisionID = @DivisionID											
									and InventoryID =T1.InventoryID 
									and InventoryAccountID = T1.CreditAccountID
									and WareHouseID =@NewWarehouseID
									and VoucherDate <= T1.VoucherDate
									AND ISNULL(S01ID,'') = ISNULL(T1.S01ID,'')
									AND ISNULL(S02ID,'') = ISNULL(T1.S02ID,'')
									AND ISNULL(S03ID,'') = ISNULL(T1.S03ID,'')
									AND ISNULL(S04ID,'') = ISNULL(T1.S04ID,'')
									AND ISNULL(S05ID,'') = ISNULL(T1.S05ID,'')
									AND ISNULL(S06ID,'') = ISNULL(T1.S06ID,'')
									AND ISNULL(S07ID,'') = ISNULL(T1.S07ID,'')
									AND ISNULL(S08ID,'') = ISNULL(T1.S08ID,'')
									AND ISNULL(S09ID,'') = ISNULL(T1.S09ID,'')
									AND ISNULL(S10ID,'') = ISNULL(T1.S10ID,'')
									AND ISNULL(S11ID,'') = ISNULL(T1.S11ID,'')
									AND ISNULL(S12ID,'') = ISNULL(T1.S12ID,'')
									AND ISNULL(S13ID,'') = ISNULL(T1.S13ID,'')
									AND ISNULL(S14ID,'') = ISNULL(T1.S14ID,'')
									AND ISNULL(S15ID,'') = ISNULL(T1.S15ID,'')
									AND ISNULL(S16ID,'') = ISNULL(T1.S16ID,'')
									AND ISNULL(S17ID,'') = ISNULL(T1.S17ID,'')
									AND ISNULL(S18ID,'') = ISNULL(T1.S18ID,'')
									AND ISNULL(S19ID,'') = ISNULL(T1.S19ID,'')
									AND ISNULL(S20ID,'') = ISNULL(T1.S20ID,'')),0),
		T1.EndQuantity_ToNow =Isnull(T1.OldQuantity,0) + Isnull( (Select top 1 EndQuantity From AT2008_QC WITH (NOLOCK) Where DivisionID =@DivisionID and										
												InventoryID =T1.InventoryID and 
												InventoryAccountID = T1.CreditAccountID and
												WareHouseID =@NewWarehouseID
												AND ISNULL(S01ID,'') = ISNULL(T1.S01ID,'')
												AND ISNULL(S02ID,'') = ISNULL(T1.S02ID,'')
												AND ISNULL(S03ID,'') = ISNULL(T1.S03ID,'')
												AND ISNULL(S04ID,'') = ISNULL(T1.S04ID,'')
												AND ISNULL(S05ID,'') = ISNULL(T1.S05ID,'')
												AND ISNULL(S06ID,'') = ISNULL(T1.S06ID,'')
												AND ISNULL(S07ID,'') = ISNULL(T1.S07ID,'')
												AND ISNULL(S08ID,'') = ISNULL(T1.S08ID,'')
												AND ISNULL(S09ID,'') = ISNULL(T1.S09ID,'')
												AND ISNULL(S10ID,'') = ISNULL(T1.S10ID,'')
												AND ISNULL(S11ID,'') = ISNULL(T1.S11ID,'')
												AND ISNULL(S12ID,'') = ISNULL(T1.S12ID,'')
												AND ISNULL(S13ID,'') = ISNULL(T1.S13ID,'')
												AND ISNULL(S14ID,'') = ISNULL(T1.S14ID,'')
												AND ISNULL(S15ID,'') = ISNULL(T1.S15ID,'')
												AND ISNULL(S16ID,'') = ISNULL(T1.S16ID,'')
												AND ISNULL(S17ID,'') = ISNULL(T1.S17ID,'')
												AND ISNULL(S18ID,'') = ISNULL(T1.S18ID,'')
												AND ISNULL(S19ID,'') = ISNULL(T1.S19ID,'')
												AND ISNULL(S20ID,'') = ISNULL(T1.S20ID,'')
												Order by TranMonth + TranYear*12 DESC), 0),
		T1.ReOrderQuantity = Isnull((Select ReOrderQuantity From AT1314 WITH (NOLOCK) Where DivisionID = @DivisionID And TranMonth = T1.TranMonth And TranYear = T1.TranYear And InventoryID = T1.InventoryID And (case when WareHouseID = '%' then @NewWarehouseID else WareHouseID end) = @NewWarehouseID
										AND ISNULL(S01ID,'') = ISNULL(T1.S01ID,'')
										AND ISNULL(S02ID,'') = ISNULL(T1.S02ID,'')
										AND ISNULL(S03ID,'') = ISNULL(T1.S03ID,'')
										AND ISNULL(S04ID,'') = ISNULL(T1.S04ID,'')
										AND ISNULL(S05ID,'') = ISNULL(T1.S05ID,'')
										AND ISNULL(S06ID,'') = ISNULL(T1.S06ID,'')
										AND ISNULL(S07ID,'') = ISNULL(T1.S07ID,'')
										AND ISNULL(S08ID,'') = ISNULL(T1.S08ID,'')
										AND ISNULL(S09ID,'') = ISNULL(T1.S09ID,'')
										AND ISNULL(S10ID,'') = ISNULL(T1.S10ID,'')
										AND ISNULL(S11ID,'') = ISNULL(T1.S11ID,'')
										AND ISNULL(S12ID,'') = ISNULL(T1.S12ID,'')
										AND ISNULL(S13ID,'') = ISNULL(T1.S13ID,'')
										AND ISNULL(S14ID,'') = ISNULL(T1.S14ID,'')
										AND ISNULL(S15ID,'') = ISNULL(T1.S15ID,'')
										AND ISNULL(S16ID,'') = ISNULL(T1.S16ID,'')
										AND ISNULL(S17ID,'') = ISNULL(T1.S17ID,'')
										AND ISNULL(S18ID,'') = ISNULL(T1.S18ID,'')
										AND ISNULL(S19ID,'') = ISNULL(T1.S19ID,'')
										AND ISNULL(S20ID,'') = ISNULL(T1.S20ID,'')),0)
		FROM #AP7003 T1

		-- CẬP NHẬT MESSAGE LỖI
			UPDATE #AP7003
			SET Status =1,
				MessageID =N'WFML000132'
			WHERE NewQuantity > EndQuantity_ToNow and @IsNegativeStock=0
		
			Insert AT7777 (UserID, Status, Message, DivisionID, Value1, Value2, IsNegativeStock)
			SELECT @UserID, Status, MessageID, @DivisionID, InventoryID, @NewWarehouseID, @IsNegativeStock FROM #AP7003
			WHERE Status =1 AND MessageID =N'WFML000132'
			----------------------
			UPDATE #AP7003
			SET Status =2,
				MessageID =N'WFML000133'
			WHERE NewQuantity > EndQuantity_ToNow and  @IsNegativeStock=1

			Insert AT7777 (UserID, Status, Message, DivisionID, Value1, Value2, IsNegativeStock)
			SELECT @UserID, Status, MessageID, @DivisionID, InventoryID, @NewWarehouseID, @IsNegativeStock FROM #AP7003
			WHERE Status =2 AND MessageID =N'WFML000133'
			----------------------
			UPDATE #AP7003
			SET Status =1,
				MessageID =N'WFML000230'
			WHERE NewQuantity > EndQuantity_ToVoucherDate and  @IsNegativeStock=0

			Insert AT7777 (UserID, Status, Message, DivisionID, Value1, Value2, Value3, IsNegativeStock)
			SELECT @UserID, Status, MessageID, @DivisionID, convert(varchar(20),VoucherDate,103), InventoryID, @NewWarehouseID, @IsNegativeStock FROM #AP7003
			WHERE Status =1 AND MessageID =N'WFML000230'
			---------------------
			UPDATE #AP7003
			SET Status =2,
				MessageID =N'WFML000231'
			WHERE NewQuantity > EndQuantity_ToVoucherDate and  @IsNegativeStock=1
		
			Insert AT7777 (UserID, Status, Message, DivisionID, Value1, Value2, Value3, IsNegativeStock)
			SELECT @UserID, Status, MessageID, @DivisionID, convert(varchar(20),VoucherDate,103), InventoryID, @NewWarehouseID, @IsNegativeStock FROM #AP7003
			WHERE Status =2 AND MessageID =N'WFML000231'
			---------------------
			UPDATE #AP7003
			SET Status =0,
				MessageID =''
			WHERE ISNULL(Status,'')=''

			Insert AT7777 (UserID, Status, Message, DivisionID, IsNegativeStock)
			SELECT @UserID, Status, MessageID, @DivisionID, @IsNegativeStock FROM #AP7003
			WHERE Status =0 AND MessageID =''
			------------------------
			------- Kiem tra ton kho an toan
			UPDATE T1
			Set Status = 1, MessageID =N'WFML000244'
			FROM #AP7003 T1 LEFT JOIN AT1302 T2 ON T2.DivisionID IN (@DivisionID,'@@@') And T2.InventoryID = T1.InventoryID
			WHERE T1.EndQuantity_ToNow - T1.NewQuantity <= T1.ReOrderQuantity
			AND EXISTS (SELECT 1 FROM AT0011 WITH (NOLOCK) LEFT JOIN AT1402 WITH (NOLOCK) ON AT1402.DivisionID = AT0011.DivisionID AND AT1402.GroupID = AT0011.GroupID 
					WHERE AT0011.DivisionID = @DivisionID AND AT1402.UserID = @UserID AND WarningID = 3)
			AND ISNULL(T2.IsMinQuantity,0) = 1

			INSERT INTO AT7778 (UserID, [Status], [Message], DivisionID, Value1, Value2, IsNegativeStock)
			Select @UserID as UserID, Status, MessageID, @DivisionID as DivisionID, InventoryID as Value1, @NewWarehouseID as Value2, @IsNegativeStock FROM #AP7003
			WHERE Status = 1 AND MessageID =N'WFML000244'
			-------------------------------------------------------
			UPDATE T1
			Set Status = 1, MessageID =N'WFML000243'
			FROM #AP7003 T1 LEFT JOIN AT1302 T2 ON T2.DivisionID IN (@DivisionID,'@@@') And T2.InventoryID = T1.InventoryID
			WHERE T1.EndQuantity_ToVoucherDate - T1.NewQuantity <= T1.ReOrderQuantity
			AND EXISTS (SELECT 1 FROM AT0011 WITH (NOLOCK) LEFT JOIN AT1402 WITH (NOLOCK) ON AT1402.DivisionID = AT0011.DivisionID AND AT1402.GroupID = AT0011.GroupID 
					WHERE AT0011.DivisionID = @DivisionID AND AT1402.UserID = @UserID AND WarningID = 3)
			AND ISNULL(T2.IsMinQuantity,0) = 1
		
			INSERT INTO AT7778 (UserID, [Status], [Message], DivisionID, Value1, Value2, Value3, IsNegativeStock)
			Select @UserID as UserID, Status, MessageID, @DivisionID as DivisionID, InventoryID as Value1, @NewWarehouseID as Value2, convert(varchar(20),VoucherDate,103) as Value3, @IsNegativeStock FROM #AP7003
			WHERE Status = 1 AND MessageID =N'WFML000243'
			---------------------------------------------------------

			UPDATE T1
			Set Status = 0, MessageID =N''
			FROM #AP7003 T1
			WHERE ISNULL(Status,'')=''

			INSERT INTO AT7778 (UserID, [Status], [Message], DivisionID, IsNegativeStock)
			Select @UserID as UserID, Status, MessageID, @DivisionID as DivisionID, @IsNegativeStock FROM #AP7003
			WHERE Status = 0 AND MessageID =N''

			Select * from AT7777 WITH (NOLOCK) Where UserID = @UserID and DivisionID = @DivisionID
			Select * from AT7778 WITH (NOLOCK) Where UserID = @UserID and DivisionID = @DivisionID
	END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
